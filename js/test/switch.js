// koffee 1.20.0

/*
 0000000  000   000  000  000000000   0000000  000   000
000       000 0 000  000     000     000       000   000
0000000   000000000  000     000     000       000000000
     000  000   000  000     000     000       000   000
0000000   00     00  000     000      0000000  000   000
 */
var cmp;

cmp = require('./utils').cmp;

describe('switch', function() {
    it('switches', function() {
        cmp("switch a\n    when 1 then 2", "switch (a)\n{\n    case 1:\n        2\n        break\n}\n");
        cmp("switch a\n    when 11 then 22; 33", "switch (a)\n{\n    case 11:\n        22\n        33\n        break\n}\n");
        cmp("switch a\n    when 'a'   then i++ ; j = 1 if k == 0", "switch (a)\n{\n    case 'a':\n        i++\n        if (k === 0)\n        {\n            j = 1\n        }\n        break\n}\n");
        cmp("switch a\n    when 'a'   then i++ ; j = 0 if k == 1\n    when 'b'   then l++ ; m = 2 if p == 3", "switch (a)\n{\n    case 'a':\n        i++\n        if (k === 1)\n        {\n            j = 0\n        }\n        break\n    case 'b':\n        l++\n        if (p === 3)\n        {\n            m = 2\n        }\n        break\n}\n");
        cmp("switch a\n    when 'a'   then i++ ; i = 1 if i == 0\n    when 'b'   then f++ ; f = 1 if f == 0\n    when 'c'\n        i++ if f != 'f'", "switch (a)\n{\n    case 'a':\n        i++\n        if (i === 0)\n        {\n            i = 1\n        }\n        break\n    case 'b':\n        f++\n        if (f === 0)\n        {\n            f = 1\n        }\n        break\n    case 'c':\n        if (f !== 'f')\n        {\n            i++\n        }\n        break\n}\n");
        cmp("switch a\n    when 111 222 333 then\n    when 'a' 'b' 'c' then", "switch (a)\n{\n    case 111:\n    case 222:\n    case 333:\n        break\n    case 'a':\n    case 'b':\n    case 'c':\n        break\n}\n");
        return cmp("switch a\n    when 111 222 333\n    when 'a' 'b' 'c'", "switch (a)\n{\n    case 111:\n    case 222:\n    case 333:\n        break\n    case 'a':\n    case 'b':\n    case 'c':\n        break\n}\n");
    });
    return it('assign', function() {
        return cmp("b = switch c\n    when 'c'\n        true\n    when 'd'\n        false", "b = (function ()\n{\n    switch (c)\n    {\n        case 'c':\n            return true\n\n        case 'd':\n            return false\n\n    }\n\n})()");
    });
});

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../../coffee/test/switch.coffee