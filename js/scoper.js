// koffee 1.20.0

/*
 0000000   0000000   0000000   00000000   00000000  00000000 
000       000       000   000  000   000  000       000   000
0000000   000       000   000  00000000   0000000   0000000  
     000  000       000   000  000        000       000   000
0000000    0000000   0000000   000        00000000  000   000
 */
var Scoper;

Scoper = (function() {
    function Scoper(kode) {
        var ref, ref1, ref2;
        this.kode = kode;
        this.verbose = (ref = this.kode.args) != null ? ref.verbose : void 0;
        this.debug = (ref1 = this.kode.args) != null ? ref1.debug : void 0;
        this.raw = (ref2 = this.kode.args) != null ? ref2.raw : void 0;
    }

    Scoper.prototype.collect = function(tl) {
        this.maps = [];
        this.vars = [];
        this.scope(tl);
        return tl;
    };

    Scoper.prototype.scope = function(body) {
        var e, i, len, ref;
        this.maps.push({});
        this.vars.push(body.vars);
        ref = body.exps;
        for (i = 0, len = ref.length; i < len; i++) {
            e = ref[i];
            this.exp(e);
        }
        this.maps.pop();
        this.vars.pop();
        return body.vars;
    };

    Scoper.prototype.exp = function(e) {
        var ref;
        if (e.type === 'var') {

        } else if (e.type) {

        } else if (e.operation && ((ref = e.operation.lhs) != null ? ref.text : void 0) && e.operation.operator.text === '=') {
            if (!this.maps.slice(-1)[0][e.operation.lhs.text]) {
                this.vars.slice(-1)[0].push(e.operation.lhs.text);
                return this.maps.slice(-1)[0][e.operation.lhs.text] = e.operation.operator.text;
            }
        }
    };

    Scoper.prototype.verb = function() {
        if (this.verbose) {
            return console.log.apply(console.log, arguments);
        }
    };

    return Scoper;

})();

module.exports = Scoper;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NvcGVyLmpzIiwic291cmNlUm9vdCI6Ii4uL2NvZmZlZSIsInNvdXJjZXMiOlsic2NvcGVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQTs7QUFRTTtJQUVDLGdCQUFDLElBQUQ7QUFFQyxZQUFBO1FBRkEsSUFBQyxDQUFBLE9BQUQ7UUFFQSxJQUFDLENBQUEsT0FBRCx1Q0FBcUIsQ0FBRTtRQUN2QixJQUFDLENBQUEsS0FBRCx5Q0FBcUIsQ0FBRTtRQUN2QixJQUFDLENBQUEsR0FBRCx5Q0FBcUIsQ0FBRTtJQUp4Qjs7cUJBTUgsT0FBQSxHQUFTLFNBQUMsRUFBRDtRQUVMLElBQUMsQ0FBQSxJQUFELEdBQVE7UUFDUixJQUFDLENBQUEsSUFBRCxHQUFRO1FBQ1IsSUFBQyxDQUFBLEtBQUQsQ0FBTyxFQUFQO2VBQ0E7SUFMSzs7cUJBT1QsS0FBQSxHQUFPLFNBQUMsSUFBRDtBQUVILFlBQUE7UUFBQSxJQUFDLENBQUEsSUFBSSxDQUFDLElBQU4sQ0FBVyxFQUFYO1FBQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxJQUFOLENBQVcsSUFBSSxDQUFDLElBQWhCO0FBQ0E7QUFBQSxhQUFBLHFDQUFBOztZQUFBLElBQUMsQ0FBQSxHQUFELENBQUssQ0FBTDtBQUFBO1FBQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxHQUFOLENBQUE7UUFDQSxJQUFDLENBQUEsSUFBSSxDQUFDLEdBQU4sQ0FBQTtlQUVBLElBQUksQ0FBQztJQVJGOztxQkFVUCxHQUFBLEdBQUssU0FBQyxDQUFEO0FBRUQsWUFBQTtRQUFBLElBQUcsQ0FBQyxDQUFDLElBQUYsS0FBVSxLQUFiO0FBQUE7U0FBQSxNQUVLLElBQUcsQ0FBQyxDQUFDLElBQUw7QUFBQTtTQUFBLE1BRUEsSUFBRyxDQUFDLENBQUMsU0FBRiwwQ0FBK0IsQ0FBRSxjQUFqQyxJQUEwQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFyQixLQUE2QixHQUExRTtZQUVELElBQUcsQ0FBSSxJQUFDLENBQUEsSUFBSyxVQUFFLENBQUEsQ0FBQSxDQUFFLENBQUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBaEIsQ0FBakI7Z0JBQ0ksSUFBQyxDQUFBLElBQUssVUFBRSxDQUFBLENBQUEsQ0FBQyxDQUFDLElBQVYsQ0FBZSxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUEvQjt1QkFDQSxJQUFDLENBQUEsSUFBSyxVQUFFLENBQUEsQ0FBQSxDQUFFLENBQUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBaEIsQ0FBVixHQUFrQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUYzRDthQUZDOztJQU5KOztxQkFZTCxJQUFBLEdBQU0sU0FBQTtRQUFHLElBQUcsSUFBQyxDQUFBLE9BQUo7bUJBQWlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBWixDQUFrQixPQUFPLENBQUMsR0FBMUIsRUFBK0IsU0FBL0IsRUFBakI7O0lBQUg7Ozs7OztBQUVWLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4gMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwICAgMDAwMDAwMDAgICAwMDAwMDAwMCAgMDAwMDAwMDAgXG4wMDAgICAgICAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgMDAwXG4wMDAwMDAwICAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwMDAwMDAgICAwMDAwMDAwICAgMDAwMDAwMCAgXG4gICAgIDAwMCAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgICAwMDAgICAgICAgMDAwICAgMDAwXG4wMDAwMDAwICAgIDAwMDAwMDAgICAwMDAwMDAwICAgMDAwICAgICAgICAwMDAwMDAwMCAgMDAwICAgMDAwXG4jIyNcblxuY2xhc3MgU2NvcGVyXG5cbiAgICBAOiAoQGtvZGUpIC0+XG5cbiAgICAgICAgQHZlcmJvc2UgPSBAa29kZS5hcmdzPy52ZXJib3NlXG4gICAgICAgIEBkZWJ1ZyAgID0gQGtvZGUuYXJncz8uZGVidWdcbiAgICAgICAgQHJhdyAgICAgPSBAa29kZS5hcmdzPy5yYXdcbiAgICAgICAgXG4gICAgY29sbGVjdDogKHRsKSAtPlxuICAgICAgICBcbiAgICAgICAgQG1hcHMgPSBbXVxuICAgICAgICBAdmFycyA9IFtdXG4gICAgICAgIEBzY29wZSB0bFxuICAgICAgICB0bFxuXG4gICAgc2NvcGU6IChib2R5KSAtPiBcbiAgICAgICAgXG4gICAgICAgIEBtYXBzLnB1c2gge31cbiAgICAgICAgQHZhcnMucHVzaCBib2R5LnZhcnNcbiAgICAgICAgQGV4cCBlIGZvciBlIGluIGJvZHkuZXhwc1xuICAgICAgICBAbWFwcy5wb3AoKVxuICAgICAgICBAdmFycy5wb3AoKVxuICAgICAgICAjIGxvZyAnc2NvcGVyOicgYm9keS52YXJzIGlmIGJvZHkudmFycy5sZW5ndGhcbiAgICAgICAgYm9keS52YXJzXG4gICAgICAgIFxuICAgIGV4cDogKGUpIC0+XG5cbiAgICAgICAgaWYgZS50eXBlID09ICd2YXInXG4gICAgICAgICAgICAjIGxvZyhncmF5KGUudHlwZSksIGdyZWVuKGUudGV4dCkpIFxuICAgICAgICBlbHNlIGlmIGUudHlwZVxuICAgICAgICAgICAgIyBsb2coZ3JheShlLnR5cGUpLCBibHVlKGUudGV4dCkpICBcbiAgICAgICAgZWxzZSBpZiBlLm9wZXJhdGlvbiBhbmQgZS5vcGVyYXRpb24ubGhzPy50ZXh0IGFuZCBlLm9wZXJhdGlvbi5vcGVyYXRvci50ZXh0ID09ICc9J1xuICAgICAgICAgICAgIyBsb2coeWVsbG93KGUub3BlcmF0aW9uLmxocy50ZXh0KSwgcmVkKGUub3BlcmF0aW9uLm9wZXJhdG9yLnRleHQpKSAgIFxuICAgICAgICAgICAgaWYgbm90IEBtYXBzWy0xXVtlLm9wZXJhdGlvbi5saHMudGV4dF1cbiAgICAgICAgICAgICAgICBAdmFyc1stMV0ucHVzaCBlLm9wZXJhdGlvbi5saHMudGV4dFxuICAgICAgICAgICAgICAgIEBtYXBzWy0xXVtlLm9wZXJhdGlvbi5saHMudGV4dF0gPSBlLm9wZXJhdGlvbi5vcGVyYXRvci50ZXh0XG4gICAgICAgIFxuICAgIHZlcmI6IC0+IGlmIEB2ZXJib3NlIHRoZW4gY29uc29sZS5sb2cuYXBwbHkgY29uc29sZS5sb2csIGFyZ3VtZW50cyBcblxubW9kdWxlLmV4cG9ydHMgPSBTY29wZXJcbiJdfQ==
//# sourceURL=../coffee/scoper.coffee