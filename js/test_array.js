// koffee 1.20.0

/*
 0000000   00000000   00000000    0000000   000   000
000   000  000   000  000   000  000   000   000 000
000000000  0000000    0000000    000000000    00000
000   000  000   000  000   000  000   000     000
000   000  000   000  000   000  000   000     000
 */
var cmp;

cmp = require('./test_utils').cmp;

describe('array', function() {
    it('index', function() {
        cmp('a[1]', 'a[1]');
        cmp('a[1][2]', 'a[1][2]');
        cmp('a[1][2]', 'a[1][2]');
        cmp('[1,2][1]', '[1,2][1]');
        return cmp('{a:1}["a"]', '{a:1}["a"]');
    });
    it('index slice', function() {
        cmp('a[0..1]', 'a.slice(0, 1+1)');
        cmp('a[0...1]', 'a.slice(0, 1)');
        cmp('a[-1]', 'a.slice(-1)[0]');
        cmp('a[-2]', 'a.slice(-2,-1)[0]');
        return cmp('a[-100]', 'a.slice(-100,-99)[0]');
    });
    it('range', function() {
        cmp('[1..10]', '[1,2,3,4,5,6,7,8,9,10]');
        cmp('[1...10]', '[1,2,3,4,5,6,7,8,9]');
        cmp('r = [1..10]', 'r = [1,2,3,4,5,6,7,8,9,10]');
        cmp('r = [1...10]', 'r = [1,2,3,4,5,6,7,8,9]');
        cmp('[1..100]', "(function() { var r = []; for (var i = 1; i <= 100; i++){ r.push(i); } return r; }).apply(this)");
        return cmp('[1...100]', "(function() { var r = []; for (var i = 1; i < 100; i++){ r.push(i); } return r; }).apply(this)");
    });
    it('array', function() {
        cmp('[1]', '[1]');
        cmp('[1 2]', '[1,2]');
        cmp('[1,2]', '[1,2]');
        cmp('[a,b]', '[a,b]');
        cmp('[ "1" ]', '["1"]');
        cmp("[ '1' ]", "['1']");
        cmp('["1" "2"]', '["1","2"]');
        cmp("['1' '2']", "['1','2']");
        cmp('["1" , "2"]', '["1","2"]');
        cmp("['1' , '2']", "['1','2']");
        cmp('[[]]', '[[]]');
        cmp('[{}]', '[{}]');
        cmp('[[[]]]', '[[[]]]');
        cmp('[[[] []]]', '[[[],[]]]');
        cmp('[[[],[]]]', '[[[],[]]]');
        cmp('[[[][]]]', '[[[],[]]]');
        cmp("[['1'] , [2]]", "[['1'],[2]]");
        cmp("['1' , a, true, false, null, undefined]", "['1',a,true,false,null,undefined]");
        return cmp("['1' \"2\" 3 4.5 [] {} true false null undefined NaN Infinity yes no]", "['1',\"2\",3,4.5,[],{},true,false,null,undefined,NaN,Infinity,true,false]");
    });
    it('objects', function() {
        cmp('[a:b]', '[{a:b}]');
        cmp("a = [{\n        a:1\n        b:2\n        c:3\n    }{\n        x:1\n        y:2\n        z:3\n    }]", "a = [{a:1,b:2,c:3},{x:1,y:2,z:3}]");
        return cmp("a = [\n        a:4\n        b:5\n    ,\n        x:6\n        y:7\n    ]", "a = [{a:4,b:5},{x:6,y:7}]");
    });
    it('function', function() {
        return cmp('[a -3]', '[a(-3)]');
    });
    return it('array nl', function() {
        cmp("[\n    1,2\n]", "[1,2]");
        cmp("[\n    1,\n    2\n]", "[1,2]");
        cmp("[\n    1\n    2\n]", "[1,2]");
        cmp("[\n    [\n        0\n        1\n    ]\n    2\n]", "[[0,1],2]");
        cmp("a = [\n        [\n            0\n            1\n        ]\n        2\n    ]", "a = [[0,1],2]");
        cmp("a =\n    [\n        [\n            0\n            1\n        ]\n        2\n    ]", "a = [[0,1],2]");
        cmp("[\n    b\n        [\n            0\n            1\n        ]\n    2\n]", "[b([0,1]),2]");
        cmp("a\n    [\n        b\n            [\n                0\n                1\n            ]\n        2\n    ]", "a([b([0,1]),2])");
        cmp("->\n    [\n        1\n        2\n    ]", "function ()\n{\n    return [1,2]\n}");
        cmp("l = [\n     1 2 3 'a'\n     c:\n      d:3\n      e:4\n     f:\n      'b'\n     'c'\n     l =\n        1\n    ]", "l = [1,2,3,'a',{c:{d:3,e:4},f:'b','c',l = 1}]");
        cmp("l = [ [\n [\n   [\n     1\n     2\n    ]\n      ]\n   ]\n     ]", "l = [[[[1,2]]]]");
        cmp("l = [[1\n      2]]", "l = [[1,2]]");
        cmp("l = [[1\n 2]]", "l = [[1,2]]");
        cmp("l = [[1\n    2]\n     ]", "l = [[1,2]]");
        return cmp("l = [[1 2]\n    ]", "l = [[1,2]]");
    });
});

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/test_array.coffee