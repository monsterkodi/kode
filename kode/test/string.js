// koffee 1.20.0

/*
 0000000  000000000  00000000   000  000   000   0000000   
000          000     000   000  000  0000  000  000        
0000000      000     0000000    000  000 0 000  000  0000  
     000     000     000   000  000  000  0000  000   000  
0000000      000     000   000  000  000   000   0000000
 */
var cmp, evl, ref;

ref = require('./utils'), cmp = ref.cmp, evl = ref.evl;

describe('string', function() {
    it('triple', function() {
        cmp("log \"\"\"\n    hello\n    \"\"\"", "console.log(`hello`)");
        evl("a =\"\"\"\n    hello\n    \"\"\"", 'hello');
        evl("a =\"\"\"\nhello\n    \"\"\"", 'hello');
        evl("a =\"\"\"hello\"\"\"", 'hello');
        evl("a =\"\"\"   hello\"\"\"", '   hello');
        evl("a =\"\"\"   hello   \"\"\"", '   hello   ');
        evl("a =\"\"\"\n    hello\nworld\n    \"\"\"", '    hello\nworld');
        evl("a =\"\"\"\n        hello\n    world\n    \"\"\"", '    hello\nworld');
        evl("a =\"\"\"\n        hello\n    world\n            ugga\n    \"\"\"", "    hello\nworld\n        ugga");
        evl("a =\"\"\"heLlo world\"\"\"", "heLlo world");
        evl("a =\"\"\" helLo world\"\"\"", " helLo world");
        evl("a =\"\"\"   hellO world   \"\"\"", "   hellO world   ");
        return evl("a =\"\"\"   hello World\n\"\"\"", "   hello World");
    });
    return it('interpolation', function() {
        cmp("'" + "'", "'" + "'");
        cmp('"#{}"', "`${}`");
        cmp('"#{1}"', "`${1}`");
        cmp('"#{a}"', "`${a}`");
        cmp('"01234\#{}890"', "`01234${}890`");
        cmp('"01234#{}890"', "`01234${}890`");
        cmp('log "#{a+1}", "#{a}"', 'console.log(`${a + 1}`,`${a}`)');
        cmp('"#{b+2}" ; "#{b}"', '`${b + 2}`\n`${b}`');
        cmp('log "- #{c+3} - #{c}"', 'console.log(`- ${c + 3} - ${c}`)');
        cmp('"""tri#{triple}ple""" ; "dou#{double}ble"', '`tri${triple}ple`\n`dou${double}ble`');
        cmp('"#{\'a\'}"', "`${'a'}`");
        cmp('"""#{"a"}"""', '`${"a"}`');
        cmp('"nullcheck in #{stripol ? 123}"', "`nullcheck in ${(stripol != null ? stripol : 123)}`");
        return cmp('"""{ok#} #{"well" + "1+\'2\' #{\'omg\'}" + is kinda fukked}"""', "`{ok#} ${\"well\" + `1+'2' ${'omg'}` + is(kinda(fukked))}`");
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbInN0cmluZy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7OztBQUFBLElBQUE7O0FBUUEsTUFBZSxPQUFBLENBQVEsU0FBUixDQUFmLEVBQUUsYUFBRixFQUFPOztBQUVQLFFBQUEsQ0FBUyxRQUFULEVBQWtCLFNBQUE7SUFFZCxFQUFBLENBQUcsUUFBSCxFQUFZLFNBQUE7UUFFUixHQUFBLENBQUksbUNBQUosRUFJUSxzQkFKUjtRQVFBLEdBQUEsQ0FBSSxrQ0FBSixFQUlRLE9BSlI7UUFNQSxHQUFBLENBQUksOEJBQUosRUFJUSxPQUpSO1FBTUEsR0FBQSxDQUFJLHNCQUFKLEVBRVEsT0FGUjtRQUlBLEdBQUEsQ0FBSSx5QkFBSixFQUVRLFVBRlI7UUFJQSxHQUFBLENBQUksNEJBQUosRUFFUSxhQUZSO1FBSUEsR0FBQSxDQUFJLHlDQUFKLEVBS1Esa0JBTFI7UUFPQSxHQUFBLENBQUksaURBQUosRUFLUSxrQkFMUjtRQU9BLEdBQUEsQ0FBSSxtRUFBSixFQU1RLGdDQU5SO1FBWUEsR0FBQSxDQUFJLDRCQUFKLEVBRVEsYUFGUjtRQUlBLEdBQUEsQ0FBSSw2QkFBSixFQUVRLGNBRlI7UUFJQSxHQUFBLENBQUksa0NBQUosRUFFUSxtQkFGUjtlQUlBLEdBQUEsQ0FBSSxpQ0FBSixFQUdRLGdCQUhSO0lBeEVRLENBQVo7V0FtRkEsRUFBQSxDQUFHLGVBQUgsRUFBbUIsU0FBQTtRQUNmLEdBQUEsQ0FBSSxHQUFBLEdBQUssR0FBVCxFQUFnRCxHQUFBLEdBQUssR0FBckQ7UUFDQSxHQUFBLENBQUksT0FBSixFQUFnRCxPQUFoRDtRQUNBLEdBQUEsQ0FBSSxRQUFKLEVBQWdELFFBQWhEO1FBQ0EsR0FBQSxDQUFJLFFBQUosRUFBZ0QsUUFBaEQ7UUFDQSxHQUFBLENBQUksZ0JBQUosRUFBZ0QsZUFBaEQ7UUFDQSxHQUFBLENBQUksZUFBSixFQUFnRCxlQUFoRDtRQUNBLEdBQUEsQ0FBSSxzQkFBSixFQUFnRCxnQ0FBaEQ7UUFDQSxHQUFBLENBQUksbUJBQUosRUFBaUQsb0JBQWpEO1FBQ0EsR0FBQSxDQUFJLHVCQUFKLEVBQWdELGtDQUFoRDtRQUNBLEdBQUEsQ0FBSSwyQ0FBSixFQUFpRCxzQ0FBakQ7UUFDQSxHQUFBLENBQUksWUFBSixFQUFnRCxVQUFoRDtRQUNBLEdBQUEsQ0FBSSxjQUFKLEVBQWdELFVBQWhEO1FBQ0EsR0FBQSxDQUFJLGlDQUFKLEVBQWdELHFEQUFoRDtlQUNBLEdBQUEsQ0FBSSxnRUFBSixFQUFzRSw0REFBdEU7SUFkZSxDQUFuQjtBQXJGYyxDQUFsQiIsInNvdXJjZXNDb250ZW50IjpbIiMjI1xuIDAwMDAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMDAgICAwMDAgIDAwMCAgIDAwMCAgIDAwMDAwMDAgICBcbjAwMCAgICAgICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAwMDAwICAwMDAgIDAwMCAgICAgICAgXG4wMDAwMDAwICAgICAgMDAwICAgICAwMDAwMDAwICAgIDAwMCAgMDAwIDAgMDAwICAwMDAgIDAwMDAgIFxuICAgICAwMDAgICAgIDAwMCAgICAgMDAwICAgMDAwICAwMDAgIDAwMCAgMDAwMCAgMDAwICAgMDAwICBcbjAwMDAwMDAgICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgXG4jIyNcblxueyBjbXAsIGV2bCB9ID0gcmVxdWlyZSAnLi91dGlscydcblxuZGVzY3JpYmUgJ3N0cmluZycgLT5cbiAgICBcbiAgICBpdCAndHJpcGxlJyAtPlxuICAgICAgICBcbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgbG9nIFxcXCJcXFwiXFxcIlxuICAgICAgICAgICAgICAgIGhlbGxvXG4gICAgICAgICAgICAgICAgXFxcIlxcXCJcXFwiXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgaGVsbG9gKVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgZXZsIFwiXCJcIlxuICAgICAgICAgICAgYSA9XFxcIlxcXCJcXFwiXG4gICAgICAgICAgICAgICAgaGVsbG9cbiAgICAgICAgICAgICAgICBcXFwiXFxcIlxcXCJcbiAgICAgICAgICAgIFwiXCJcIiAnaGVsbG8nXG4gICAgICAgICAgICBcbiAgICAgICAgZXZsIFwiXCJcIlxuICAgICAgICAgICAgYSA9XFxcIlxcXCJcXFwiXG4gICAgICAgICAgICBoZWxsb1xuICAgICAgICAgICAgICAgIFxcXCJcXFwiXFxcIlxuICAgICAgICAgICAgXCJcIlwiICdoZWxsbydcbiAgICAgICAgICAgIFxuICAgICAgICBldmwgXCJcIlwiXG4gICAgICAgICAgICBhID1cXFwiXFxcIlxcXCJoZWxsb1xcXCJcXFwiXFxcIlxuICAgICAgICAgICAgXCJcIlwiICdoZWxsbydcblxuICAgICAgICBldmwgXCJcIlwiXG4gICAgICAgICAgICBhID1cXFwiXFxcIlxcXCIgICBoZWxsb1xcXCJcXFwiXFxcIlxuICAgICAgICAgICAgXCJcIlwiICcgICBoZWxsbydcbiAgICAgICAgICAgIFxuICAgICAgICBldmwgXCJcIlwiXG4gICAgICAgICAgICBhID1cXFwiXFxcIlxcXCIgICBoZWxsbyAgIFxcXCJcXFwiXFxcIlxuICAgICAgICAgICAgXCJcIlwiICcgICBoZWxsbyAgICdcbiAgICAgICAgICAgIFxuICAgICAgICBldmwgXCJcIlwiXG4gICAgICAgICAgICBhID1cXFwiXFxcIlxcXCJcbiAgICAgICAgICAgICAgICBoZWxsb1xuICAgICAgICAgICAgd29ybGRcbiAgICAgICAgICAgICAgICBcXFwiXFxcIlxcXCJcbiAgICAgICAgICAgIFwiXCJcIiAnICAgIGhlbGxvXFxud29ybGQnXG4gICAgICAgICAgICBcbiAgICAgICAgZXZsIFwiXCJcIlxuICAgICAgICAgICAgYSA9XFxcIlxcXCJcXFwiXG4gICAgICAgICAgICAgICAgICAgIGhlbGxvXG4gICAgICAgICAgICAgICAgd29ybGRcbiAgICAgICAgICAgICAgICBcXFwiXFxcIlxcXCJcbiAgICAgICAgICAgIFwiXCJcIiAnICAgIGhlbGxvXFxud29ybGQnXG4gICAgICAgICAgICBcbiAgICAgICAgZXZsIFwiXCJcIlxuICAgICAgICAgICAgYSA9XFxcIlxcXCJcXFwiXG4gICAgICAgICAgICAgICAgICAgIGhlbGxvXG4gICAgICAgICAgICAgICAgd29ybGRcbiAgICAgICAgICAgICAgICAgICAgICAgIHVnZ2FcbiAgICAgICAgICAgICAgICBcXFwiXFxcIlxcXCJcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgICAgICAgICAgaGVsbG9cbiAgICAgICAgICAgICAgICB3b3JsZFxuICAgICAgICAgICAgICAgICAgICAgICAgdWdnYVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgZXZsIFwiXCJcIlxuICAgICAgICAgICAgYSA9XFxcIlxcXCJcXFwiaGVMbG8gd29ybGRcXFwiXFxcIlxcXCJcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJoZUxsbyB3b3JsZFwiXCJcIlxuXG4gICAgICAgIGV2bCBcIlwiXCJcbiAgICAgICAgICAgIGEgPVxcXCJcXFwiXFxcIiBoZWxMbyB3b3JsZFxcXCJcXFwiXFxcIlxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIiBoZWxMbyB3b3JsZFwiXCJcIlxuICAgICAgICAgICAgXG4gICAgICAgIGV2bCBcIlwiXCJcbiAgICAgICAgICAgIGEgPVxcXCJcXFwiXFxcIiAgIGhlbGxPIHdvcmxkICAgXFxcIlxcXCJcXFwiXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiICAgaGVsbE8gd29ybGQgICBcIlwiXCJcblxuICAgICAgICBldmwgXCJcIlwiXG4gICAgICAgICAgICBhID1cXFwiXFxcIlxcXCIgICBoZWxsbyBXb3JsZFxuICAgICAgICAgICAgXFxcIlxcXCJcXFwiXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiICAgaGVsbG8gV29ybGRcIlwiXCJcbiAgICAgICAgICAgIFxuICAgICMgMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMDAgIDAwMDAwMDAwICAgMDAwMDAwMDAgICAgMDAwMDAwMCAgIDAwMFxuICAgICMgMDAwICAwMDAwICAwMDAgICAgIDAwMCAgICAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMFxuICAgICMgMDAwICAwMDAgMCAwMDAgICAgIDAwMCAgICAgMDAwMDAwMCAgIDAwMDAwMDAgICAgMDAwMDAwMDAgICAwMDAgICAwMDAgIDAwMFxuICAgICMgMDAwICAwMDAgIDAwMDAgICAgIDAwMCAgICAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgICAwMDAgICAwMDAgIDAwMFxuICAgICMgMDAwICAwMDAgICAwMDAgICAgIDAwMCAgICAgMDAwMDAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgICAgMDAwMDAwMCAgIDAwMDAwMDBcblxuICAgIGl0ICdpbnRlcnBvbGF0aW9uJyAtPlxuICAgICAgICBjbXAgXCInI3t9J1wiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiJyN7fSdcIlxuICAgICAgICBjbXAgJ1wiI3t9XCInICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYCR7fWBcIlxuICAgICAgICBjbXAgJ1wiI3sxfVwiJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYCR7MX1gXCJcbiAgICAgICAgY21wICdcIiN7YX1cIicgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImAke2F9YFwiXG4gICAgICAgIGNtcCAnXCIwMTIzNFxcI3t9ODkwXCInICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYDAxMjM0JHt9ODkwYFwiXG4gICAgICAgIGNtcCAnXCIwMTIzNCN7fTg5MFwiJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJgMDEyMzQke304OTBgXCJcbiAgICAgICAgY21wICdsb2cgXCIje2ErMX1cIiwgXCIje2F9XCInICAgICAgICAgICAgICAgICAgICAgICdjb25zb2xlLmxvZyhgJHthICsgMX1gLGAke2F9YCknXG4gICAgICAgIGNtcCAnXCIje2IrMn1cIiA7IFwiI3tifVwiJyAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Ake2IgKyAyfWBcXG5gJHtifWAnXG4gICAgICAgIGNtcCAnbG9nIFwiLSAje2MrM30gLSAje2N9XCInICAgICAgICAgICAgICAgICAgICAgJ2NvbnNvbGUubG9nKGAtICR7YyArIDN9IC0gJHtjfWApJ1xuICAgICAgICBjbXAgJ1wiXCJcInRyaSN7dHJpcGxlfXBsZVwiXCJcIiA7IFwiZG91I3tkb3VibGV9YmxlXCInICAnYHRyaSR7dHJpcGxlfXBsZWBcXG5gZG91JHtkb3VibGV9YmxlYCdcbiAgICAgICAgY21wICdcIiN7XFwnYVxcJ31cIicgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYCR7J2EnfWBcIlxuICAgICAgICBjbXAgJ1wiXCJcIiN7XCJhXCJ9XCJcIlwiJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdgJHtcImFcIn1gJ1xuICAgICAgICBjbXAgJ1wibnVsbGNoZWNrIGluICN7c3RyaXBvbCA/IDEyM31cIicgICAgICAgICAgIFwiYG51bGxjaGVjayBpbiAkeyhzdHJpcG9sICE9IG51bGwgPyBzdHJpcG9sIDogMTIzKX1gXCJcbiAgICAgICAgY21wICdcIlwiXCJ7b2sjfSAje1wid2VsbFwiICsgXCIxK1xcJzJcXCcgI3tcXCdvbWdcXCd9XCIgKyBpcyBraW5kYSBmdWtrZWR9XCJcIlwiJyAgXCJge29rI30gJHtcXFwid2VsbFxcXCIgKyBgMSsnMicgJHsnb21nJ31gICsgaXMoa2luZGEoZnVra2VkKSl9YFwiXG4iXX0=
//# sourceURL=string.coffee