// koffee 1.20.0

/*
 0000000   0000000          000  00000000   0000000  000000000
000   000  000   000        000  000       000          000
000   000  0000000          000  0000000   000          000
000   000  000   000  000   000  000       000          000
 0000000   0000000     0000000   00000000   0000000     000
 */
var cmp;

cmp = require('./test_utils').cmp;

describe('object', function() {
    it('object', function() {
        cmp('a:1', '{a:1}');
        cmp('{a:1}', '{a:1}');
        cmp('a:1 b:2', '{a:1,b:2}');
        cmp('{a:3 b:4}', '{a:3,b:4}');
        cmp('a:b:c', '{a:{b:c}}');
        cmp('a:b:c,d:e:f', '{a:{b:c,d:{e:f}}}');
        cmp('a:b c', '{a:b(c)}');
        cmp('a:b:c d:e:f', '{a:{b:c({d:{e:f}})}}');
        cmp('o = { a:1 b:2 c: d:4 e:5 }', 'o = {a:1,b:2,c:{d:4,e:5}}');
        cmp("a\n    {\n        a:1\n    }", "a({a:1})");
        cmp("a =\n    {\n        a:1\n    }", "a = {a:1}");
        cmp("{a:1}\nlog 3", "{a:1}\nconsole.log(3)");
        cmp("o={a:1}\nlog o", "o = {a:1}\nconsole.log(o)");
        cmp("i = y:1\nlog i", "i = {y:1}\nconsole.log(i)");
        cmp("i = y:1 z:2\nlog i", "i = {y:1,z:2}\nconsole.log(i)");
        cmp("u = v:0 w:1; x=y:2", "u = {v:0,w:1}\nx = {y:2}");
        return cmp("i = y:1 z:2; z=a:1\nlog i", "i = {y:1,z:2}\nz = {a:1}\nconsole.log(i)");
    });
    it('stringify', function() {
        cmp("a.b:1", "{'a.b':1}");
        cmp("|:1", "{'|':1}");
        cmp("==:1", "{'==':1}");
        cmp(">=:1", "{'>=':1}");
        cmp("<=:1", "{'<=':1}");
        cmp("!=:1", "{'!=':1}");
        cmp(".:1", "{'.':1}");
        cmp(",:1", "{',':1}");
        cmp(";:1", "{';':1}");
        cmp("*:1", "{'*':1}");
        cmp("+:1", "{'+':1}");
        cmp("-:1", "{'-':1}");
        return cmp("/:1", "{'/':1}");
    });
    return it('assign', function() {
        cmp("{x} = o", "x = o.x\n");
        cmp("{x,y} = o", "x = o.x\ny = o.y\n");
        return cmp("{x,y} = require 'sthg'", "x = require('sthg').x\ny = require('sthg').y\n");
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdF9vYmplY3QuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vY29mZmVlL3Rlc3QiLCJzb3VyY2VzIjpbInRlc3Rfb2JqZWN0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQTs7QUFRQyxNQUFPLE9BQUEsQ0FBUSxjQUFSOztBQUVSLFFBQUEsQ0FBUyxRQUFULEVBQWtCLFNBQUE7SUFFZCxFQUFBLENBQUcsUUFBSCxFQUFZLFNBQUE7UUFFUixHQUFBLENBQUksS0FBSixFQUFvQixPQUFwQjtRQUNBLEdBQUEsQ0FBSSxPQUFKLEVBQW9CLE9BQXBCO1FBQ0EsR0FBQSxDQUFJLFNBQUosRUFBb0IsV0FBcEI7UUFDQSxHQUFBLENBQUksV0FBSixFQUFvQixXQUFwQjtRQUNBLEdBQUEsQ0FBSSxPQUFKLEVBQW9CLFdBQXBCO1FBQ0EsR0FBQSxDQUFJLGFBQUosRUFBb0IsbUJBQXBCO1FBQ0EsR0FBQSxDQUFJLE9BQUosRUFBb0IsVUFBcEI7UUFDQSxHQUFBLENBQUksYUFBSixFQUFvQixzQkFBcEI7UUFFQSxHQUFBLENBQUksNEJBQUosRUFBaUMsMkJBQWpDO1FBRUEsR0FBQSxDQUFJLDhCQUFKLEVBS1EsVUFMUjtRQVNBLEdBQUEsQ0FBSSxnQ0FBSixFQUtRLFdBTFI7UUFTQSxHQUFBLENBQUksY0FBSixFQUdRLHVCQUhSO1FBUUEsR0FBQSxDQUFJLGdCQUFKLEVBR1EsMkJBSFI7UUFRQSxHQUFBLENBQUksZ0JBQUosRUFHUSwyQkFIUjtRQVFBLEdBQUEsQ0FBSSxvQkFBSixFQUdRLCtCQUhSO1FBUUEsR0FBQSxDQUFJLG9CQUFKLEVBRVEsMEJBRlI7ZUFPQSxHQUFBLENBQUksMkJBQUosRUFHUSwwQ0FIUjtJQXRFUSxDQUFaO0lBcUZBLEVBQUEsQ0FBRyxXQUFILEVBQWUsU0FBQTtRQUVYLEdBQUEsQ0FBSSxPQUFKLEVBQVksV0FBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtRQUNBLEdBQUEsQ0FBSSxNQUFKLEVBQVksVUFBWjtRQUNBLEdBQUEsQ0FBSSxNQUFKLEVBQVksVUFBWjtRQUNBLEdBQUEsQ0FBSSxNQUFKLEVBQVksVUFBWjtRQUNBLEdBQUEsQ0FBSSxNQUFKLEVBQVksVUFBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtRQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtlQUNBLEdBQUEsQ0FBSSxLQUFKLEVBQVksU0FBWjtJQWRXLENBQWY7V0FzQkEsRUFBQSxDQUFHLFFBQUgsRUFBWSxTQUFBO1FBRVIsR0FBQSxDQUFJLFNBQUosRUFBZ0MsV0FBaEM7UUFDQSxHQUFBLENBQUksV0FBSixFQUFnQyxvQkFBaEM7ZUFDQSxHQUFBLENBQUksd0JBQUosRUFBZ0MsZ0RBQWhDO0lBSlEsQ0FBWjtBQTdHYyxDQUFsQiIsInNvdXJjZXNDb250ZW50IjpbIiMjI1xuIDAwMDAwMDAgICAwMDAwMDAwICAgICAgICAgIDAwMCAgMDAwMDAwMDAgICAwMDAwMDAwICAwMDAwMDAwMDBcbjAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAgICAwMDAgIDAwMCAgICAgICAwMDAgICAgICAgICAgMDAwXG4wMDAgICAwMDAgIDAwMDAwMDAgICAgICAgICAgMDAwICAwMDAwMDAwICAgMDAwICAgICAgICAgIDAwMFxuMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgIDAwMCAgICAgICAgICAwMDBcbiAwMDAwMDAwICAgMDAwMDAwMCAgICAgMDAwMDAwMCAgIDAwMDAwMDAwICAgMDAwMDAwMCAgICAgMDAwXG4jIyNcblxue2NtcH0gPSByZXF1aXJlICcuL3Rlc3RfdXRpbHMnXG5cbmRlc2NyaWJlICdvYmplY3QnIC0+XG4gICAgICAgIFxuICAgIGl0ICdvYmplY3QnIC0+XG5cbiAgICAgICAgY21wICdhOjEnICAgICAgICAgICAne2E6MX0nXG4gICAgICAgIGNtcCAne2E6MX0nICAgICAgICAgJ3thOjF9J1xuICAgICAgICBjbXAgJ2E6MSBiOjInICAgICAgICd7YToxLGI6Mn0nXG4gICAgICAgIGNtcCAne2E6MyBiOjR9JyAgICAgJ3thOjMsYjo0fSdcbiAgICAgICAgY21wICdhOmI6YycgICAgICAgICAne2E6e2I6Y319J1xuICAgICAgICBjbXAgJ2E6YjpjLGQ6ZTpmJyAgICd7YTp7YjpjLGQ6e2U6Zn19fSdcbiAgICAgICAgY21wICdhOmIgYycgICAgICAgICAne2E6YihjKX0nXG4gICAgICAgIGNtcCAnYTpiOmMgZDplOmYnICAgJ3thOntiOmMoe2Q6e2U6Zn19KX19J1xuXG4gICAgICAgIGNtcCAnbyA9IHsgYToxIGI6MiBjOiBkOjQgZTo1IH0nICdvID0ge2E6MSxiOjIsYzp7ZDo0LGU6NX19J1xuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGFcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGE6MVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEoe2E6MX0pXG4gICAgICAgICAgICBcIlwiXCJcblxuICAgICAgICBjbXAgXCJcIlwiXG4gICAgICAgICAgICBhID1cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGE6MVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEgPSB7YToxfVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAge2E6MX1cbiAgICAgICAgICAgIGxvZyAzXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICB7YToxfVxuICAgICAgICAgICAgY29uc29sZS5sb2coMylcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIG89e2E6MX1cbiAgICAgICAgICAgIGxvZyBvXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBvID0ge2E6MX1cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG8pXG4gICAgICAgICAgICBcIlwiXCJcblxuICAgICAgICBjbXAgXCJcIlwiXG4gICAgICAgICAgICBpID0geToxXG4gICAgICAgICAgICBsb2cgaVxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIlxuICAgICAgICAgICAgaSA9IHt5OjF9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhpKVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgaSA9IHk6MSB6OjJcbiAgICAgICAgICAgIGxvZyBpXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBpID0ge3k6MSx6OjJ9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhpKVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgdSA9IHY6MCB3OjE7IHg9eToyXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICB1ID0ge3Y6MCx3OjF9XG4gICAgICAgICAgICB4ID0ge3k6Mn1cbiAgICAgICAgICAgIFwiXCJcIlxuICAgICAgICAgICAgXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGkgPSB5OjEgejoyOyB6PWE6MVxuICAgICAgICAgICAgbG9nIGlcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGkgPSB7eToxLHo6Mn1cbiAgICAgICAgICAgIHogPSB7YToxfVxuICAgICAgICAgICAgY29uc29sZS5sb2coaSlcbiAgICAgICAgICAgIFwiXCJcIlxuICAgICAgICAgICAgXG4gICAgIyAgMDAwMDAwMCAgMDAwMDAwMDAwICAwMDAwMDAwMCAgIDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMCAgMDAwMDAwMDAgIDAwMCAgIDAwMCAgXG4gICAgIyAwMDAgICAgICAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgMDAwICAwMDAgICAgICAgIDAwMCAgMDAwICAgICAgICAwMDAgMDAwICAgXG4gICAgIyAwMDAwMDAwICAgICAgMDAwICAgICAwMDAwMDAwICAgIDAwMCAgMDAwIDAgMDAwICAwMDAgIDAwMDAgIDAwMCAgMDAwMDAwICAgICAgMDAwMDAgICAgXG4gICAgIyAgICAgIDAwMCAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgMDAwICAwMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwICAgICAgICAgIDAwMCAgICAgXG4gICAgIyAwMDAwMDAwICAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMCAgMDAwICAgICAgICAgIDAwMCAgICAgXG4gICAgXG4gICAgaXQgJ3N0cmluZ2lmeScgLT5cbiAgICAgICAgXG4gICAgICAgIGNtcCBcImEuYjoxXCIgXCJ7J2EuYic6MX1cIlxuICAgICAgICBjbXAgXCJ8OjFcIiAgIFwieyd8JzoxfVwiXG4gICAgICAgIGNtcCBcIj09OjFcIiAgXCJ7Jz09JzoxfVwiXG4gICAgICAgIGNtcCBcIj49OjFcIiAgXCJ7Jz49JzoxfVwiXG4gICAgICAgIGNtcCBcIjw9OjFcIiAgXCJ7Jzw9JzoxfVwiXG4gICAgICAgIGNtcCBcIiE9OjFcIiAgXCJ7JyE9JzoxfVwiXG4gICAgICAgIGNtcCBcIi46MVwiICAgXCJ7Jy4nOjF9XCJcbiAgICAgICAgY21wIFwiLDoxXCIgICBcInsnLCc6MX1cIlxuICAgICAgICBjbXAgXCI7OjFcIiAgIFwieyc7JzoxfVwiXG4gICAgICAgIGNtcCBcIio6MVwiICAgXCJ7JyonOjF9XCJcbiAgICAgICAgY21wIFwiKzoxXCIgICBcInsnKyc6MX1cIlxuICAgICAgICBjbXAgXCItOjFcIiAgIFwieyctJzoxfVwiXG4gICAgICAgIGNtcCBcIi86MVwiICAgXCJ7Jy8nOjF9XCJcbiAgICAgICAgXG4gICAgIyAgMDAwMDAwMCAgICAwMDAwMDAwICAgMDAwMDAwMCAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgXG4gICAgIyAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAgICAgMDAwICAwMDAgICAgICAgIDAwMDAgIDAwMCAgXG4gICAgIyAwMDAwMDAwMDAgIDAwMDAwMDAgICAwMDAwMDAwICAgMDAwICAwMDAgIDAwMDAgIDAwMCAwIDAwMCAgXG4gICAgIyAwMDAgICAwMDAgICAgICAgMDAwICAgICAgIDAwMCAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgXG4gICAgIyAwMDAgICAwMDAgIDAwMDAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgXG4gICAgXG4gICAgaXQgJ2Fzc2lnbicgLT5cbiAgICAgICAgXG4gICAgICAgIGNtcCBcInt4fSA9IG9cIiAgICAgICAgICAgICAgICAgICBcInggPSBvLnhcXG5cIlxuICAgICAgICBjbXAgXCJ7eCx5fSA9IG9cIiAgICAgICAgICAgICAgICAgXCJ4ID0gby54XFxueSA9IG8ueVxcblwiXG4gICAgICAgIGNtcCBcInt4LHl9ID0gcmVxdWlyZSAnc3RoZydcIiAgICBcInggPSByZXF1aXJlKCdzdGhnJykueFxcbnkgPSByZXF1aXJlKCdzdGhnJykueVxcblwiXG4gICAgICAgICJdfQ==
//# sourceURL=../../coffee/test/test_object.coffee