// koffee 1.20.0

/*
00000000  000   000  000   000   0000000
000       000   000  0000  000  000
000000    000   000  000 0 000  000
000       000   000  000  0000  000
000        0000000   000   000   0000000
 */
var cmp;

cmp = require('./test_utils').cmp;

describe('func', function() {
    it('func', function() {
        cmp('->', 'function ()\n{}');
        cmp('(a) ->', 'function (a)\n{}');
        cmp('(a,b,c) ->', 'function (a, b, c)\n{}');
        cmp('a = (a,b,c) ->', 'a = function (a, b, c)\n{}');
        cmp("-> return 1", "function ()\n{\n    return 1\n}");
        cmp("->\n    1\n    2", "function ()\n{\n    1\n    return 2\n}");
        cmp("->\n    return 1\n    2", "function ()\n{\n    return 1\n    return 2\n}");
        cmp("->\n    1\n    return 2", "function ()\n{\n    1\n    return 2\n}");
        cmp("a = (a,b,c) -> d", "a = function (a, b, c)\n{\n    return d\n}");
        cmp("a.x = (y,z) -> q", "a.x = function (y, z)\n{\n    return q\n}");
        cmp("a = ->\n    b = ->", "a = function ()\n{\n    return b = function ()\n    {}\n}");
        cmp("a = (b,c) ->\n    b = (e, f) -> g\n    b", "a = function (b, c)\n{\n    b = function (e, f)\n    {\n        return g\n    }\n    return b\n}");
        cmp("a = (b,c) ->\n    b = (e, f) -> h", "a = function (b, c)\n{\n    return b = function (e, f)\n    {\n        return h\n    }\n}");
        cmp("a = (b,c) ->\n    (e, f) -> j", "a = function (b, c)\n{\n    return function (e, f)\n    {\n        return j\n    }\n}");
        cmp("f = ->\n    (a) -> 1", "f = function ()\n{\n    return function (a)\n    {\n        return 1\n    }\n}");
        cmp("a = ->\n    'a'\n1", "a = function ()\n{\n    return 'a'\n}\n1");
        cmp("a = ->\n    log 'a'\n\nb = ->\n    log 'b'", "a = function ()\n{\n    return console.log('a')\n}\nb = function ()\n{\n    return console.log('b')\n}");
        cmp("a = ( a, b=1 c=2 ) ->", "a = function (a, b = 1, c = 2)\n{}");
        return cmp("if true then return", "if (true)\n{\n    return\n}");
    });
    return it('calls', function() {
        cmp('a(b)', 'a(b)');
        cmp('a(b,c)', 'a(b,c)');
        cmp('a(1,null,"2")', 'a(1,null,"2")');
        cmp('a[1](b)', 'a[1](b)');
        cmp("f 'b', (a) ->", "f('b',function (a)\n{})");
        cmp("a('1' 2 3.4 true false null undefined NaN Infinity)", "a('1',2,3.4,true,false,null,undefined,NaN,Infinity)");
        cmp("a(\n    '1'\n    2\n    3.4\n    true\n    [\n        null\n        undefined\n    ]\n)", "a('1',2,3.4,true,[null,undefined])");
        cmp("a '1'\nb  2\nc  3.4\nd  true", "a('1')\nb(2)\nc(3.4)\nd(true)");
        cmp("a b 1\nc d 2", "a(b(1))\nc(d(2))");
        cmp("a\n    b\n        3\nc\n    d\n        4", "a(b(3))\nc(d(4))");
        cmp("a\n    b\n    1\nc\n    d\n    2", "a(b,1)\nc(d,2)");
        cmp("a 'b' -> c", "a('b',function ()\n{\n    return c\n})");
        cmp('l = pat.map ->', 'l = pat.map(function ()\n{})');
        cmp("((a) -> 1)", "(function (a)\n{\n    return 1\n})");
        cmp("l = a (i) -> 0", "l = a(function (i)\n{\n    return 0\n})");
        cmp("l = timer ((i) -> 1)", "l = timer((function (i)\n{\n    return 1\n}))");
        return cmp("l = timer ((i) -> i), y", "l = timer((function (i)\n{\n    return i\n}),y)");
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdF9mdW5jLmpzIiwic291cmNlUm9vdCI6Ii4uL2NvZmZlZSIsInNvdXJjZXMiOlsidGVzdF9mdW5jLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQTs7QUFRQyxNQUFPLE9BQUEsQ0FBUSxjQUFSOztBQUVSLFFBQUEsQ0FBUyxNQUFULEVBQWdCLFNBQUE7SUFFWixFQUFBLENBQUcsTUFBSCxFQUFVLFNBQUE7UUFFTixHQUFBLENBQUksSUFBSixFQUF1QixpQkFBdkI7UUFDQSxHQUFBLENBQUksUUFBSixFQUF1QixrQkFBdkI7UUFDQSxHQUFBLENBQUksWUFBSixFQUF1Qix3QkFBdkI7UUFDQSxHQUFBLENBQUksZ0JBQUosRUFBdUIsNEJBQXZCO1FBRUEsR0FBQSxDQUFJLGFBQUosRUFFUSxpQ0FGUjtRQVNBLEdBQUEsQ0FBSSxrQkFBSixFQUlRLHdDQUpSO1FBWUEsR0FBQSxDQUFJLHlCQUFKLEVBSVEsK0NBSlI7UUFZQSxHQUFBLENBQUkseUJBQUosRUFJUSx3Q0FKUjtRQVlBLEdBQUEsQ0FBSSxrQkFBSixFQUVRLDRDQUZSO1FBU0EsR0FBQSxDQUFJLGtCQUFKLEVBRVEsMkNBRlI7UUFTQSxHQUFBLENBQUksb0JBQUosRUFHUSwyREFIUjtRQVdBLEdBQUEsQ0FBSSwwQ0FBSixFQUlRLGtHQUpSO1FBZUEsR0FBQSxDQUFJLG1DQUFKLEVBR1EsMkZBSFI7UUFhQSxHQUFBLENBQUksK0JBQUosRUFHUSx1RkFIUjtRQWFBLEdBQUEsQ0FBSSxzQkFBSixFQUdRLGdGQUhSO1FBYUEsR0FBQSxDQUFJLG9CQUFKLEVBSVEsMENBSlI7UUFZQSxHQUFBLENBQUksNENBQUosRUFNUSx3R0FOUjtRQWlCQSxHQUFBLENBQUksdUJBQUosRUFBOEIsb0NBQTlCO2VBRUEsR0FBQSxDQUFJLHFCQUFKLEVBRVEsNkJBRlI7SUF0S00sQ0FBVjtXQWtNQSxFQUFBLENBQUcsT0FBSCxFQUFXLFNBQUE7UUFFUCxHQUFBLENBQUksTUFBSixFQUFzQixNQUF0QjtRQUNBLEdBQUEsQ0FBSSxRQUFKLEVBQXNCLFFBQXRCO1FBQ0EsR0FBQSxDQUFJLGVBQUosRUFBc0IsZUFBdEI7UUFDQSxHQUFBLENBQUksU0FBSixFQUFzQixTQUF0QjtRQUNBLEdBQUEsQ0FBSSxlQUFKLEVBQXNCLHlCQUF0QjtRQUNBLEdBQUEsQ0FBSSxxREFBSixFQUNJLHFEQURKO1FBR0EsR0FBQSxDQUFJLHlGQUFKLEVBV1Esb0NBWFI7UUFlQSxHQUFBLENBQUksOEJBQUosRUFLUSwrQkFMUjtRQVlBLEdBQUEsQ0FBSSxjQUFKLEVBR1Esa0JBSFI7UUFRQSxHQUFBLENBQUksMENBQUosRUFPUSxrQkFQUjtRQVlBLEdBQUEsQ0FBSSxrQ0FBSixFQU9RLGdCQVBSO1FBWUEsR0FBQSxDQUFJLFlBQUosRUFDSSx3Q0FESjtRQVFBLEdBQUEsQ0FBSSxnQkFBSixFQUFxQiw4QkFBckI7UUFFQSxHQUFBLENBQUksWUFBSixFQUVRLG9DQUZSO1FBU0EsR0FBQSxDQUFJLGdCQUFKLEVBRVEseUNBRlI7UUFTQSxHQUFBLENBQUksc0JBQUosRUFFUSwrQ0FGUjtlQVNBLEdBQUEsQ0FBSSx5QkFBSixFQUVRLGlEQUZSO0lBMUdPLENBQVg7QUFwTVksQ0FBaEIiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbjAwMDAwMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgIDAwMDAwMDBcbjAwMCAgICAgICAwMDAgICAwMDAgIDAwMDAgIDAwMCAgMDAwXG4wMDAwMDAgICAgMDAwICAgMDAwICAwMDAgMCAwMDAgIDAwMFxuMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAwMDAwICAwMDBcbjAwMCAgICAgICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgIDAwMDAwMDBcbiMjI1xuXG57Y21wfSA9IHJlcXVpcmUgJy4vdGVzdF91dGlscydcblxuZGVzY3JpYmUgJ2Z1bmMnIC0+XG5cbiAgICBpdCAnZnVuYycgLT5cblxuICAgICAgICBjbXAgJy0+JyAgICAgICAgICAgICAgICdmdW5jdGlvbiAoKVxcbnt9J1xuICAgICAgICBjbXAgJyhhKSAtPicgICAgICAgICAgICdmdW5jdGlvbiAoYSlcXG57fSdcbiAgICAgICAgY21wICcoYSxiLGMpIC0+JyAgICAgICAnZnVuY3Rpb24gKGEsIGIsIGMpXFxue30nXG4gICAgICAgIGNtcCAnYSA9IChhLGIsYykgLT4nICAgJ2EgPSBmdW5jdGlvbiAoYSwgYiwgYylcXG57fSdcblxuICAgICAgICBjbXAgXCJcIlwiXG4gICAgICAgICAgICAtPiByZXR1cm4gMVxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIlxuICAgICAgICAgICAgZnVuY3Rpb24gKClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgLT5cbiAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIlxuICAgICAgICAgICAgZnVuY3Rpb24gKClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgcmV0dXJuIDJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIC0+XG4gICAgICAgICAgICAgICAgcmV0dXJuIDFcbiAgICAgICAgICAgICAgICAyXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBmdW5jdGlvbiAoKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiAxXG4gICAgICAgICAgICAgICAgcmV0dXJuIDJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIC0+XG4gICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgIHJldHVybiAyXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBmdW5jdGlvbiAoKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICByZXR1cm4gMlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgYSA9IChhLGIsYykgLT4gZFxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIlxuICAgICAgICAgICAgYSA9IGZ1bmN0aW9uIChhLCBiLCBjKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcIlwiXCJcblxuICAgICAgICBjbXAgXCJcIlwiXG4gICAgICAgICAgICBhLnggPSAoeSx6KSAtPiBxXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBhLnggPSBmdW5jdGlvbiAoeSwgeilcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgYSA9IC0+XG4gICAgICAgICAgICAgICAgYiA9IC0+XG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBhID0gZnVuY3Rpb24gKClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYiA9IGZ1bmN0aW9uICgpXG4gICAgICAgICAgICAgICAge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGEgPSAoYixjKSAtPlxuICAgICAgICAgICAgICAgIGIgPSAoZSwgZikgLT4gZ1xuICAgICAgICAgICAgICAgIGJcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEgPSBmdW5jdGlvbiAoYiwgYylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBiID0gZnVuY3Rpb24gKGUsIGYpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gYlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgYSA9IChiLGMpIC0+XG4gICAgICAgICAgICAgICAgYiA9IChlLCBmKSAtPiBoXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBhID0gZnVuY3Rpb24gKGIsIGMpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGIgPSBmdW5jdGlvbiAoZSwgZilcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBoXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgYSA9IChiLGMpIC0+XG4gICAgICAgICAgICAgICAgKGUsIGYpIC0+IGpcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEgPSBmdW5jdGlvbiAoYiwgYylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGUsIGYpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4galxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGYgPSAtPlxuICAgICAgICAgICAgICAgIChhKSAtPiAxXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBmID0gZnVuY3Rpb24gKClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGEpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGEgPSAtPlxuICAgICAgICAgICAgICAgICdhJ1xuICAgICAgICAgICAgMVxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIlxuICAgICAgICAgICAgYSA9IGZ1bmN0aW9uICgpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdhJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgMVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgYSA9IC0+XG4gICAgICAgICAgICAgICAgbG9nICdhJ1xuXG4gICAgICAgICAgICBiID0gLT5cbiAgICAgICAgICAgICAgICBsb2cgJ2InXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBhID0gZnVuY3Rpb24gKClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coJ2EnKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYiA9IGZ1bmN0aW9uICgpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKCdiJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcImEgPSAoIGEsIGI9MSBjPTIgKSAtPlwiLCAgXCJhID0gZnVuY3Rpb24gKGEsIGIgPSAxLCBjID0gMilcXG57fVwiXG5cbiAgICAgICAgY21wIFwiXCJcIlxuICAgICAgICAgICAgaWYgdHJ1ZSB0aGVuIHJldHVyblxuICAgICAgICAgICAgXCJcIlwiIFwiXCJcIlxuICAgICAgICAgICAgaWYgKHRydWUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcIlwiXCJcblxuICAgICAgICAjIGNtcCBcIlwiXCJcbiAgICAgICAgICAgICMgZiA9ID0+XG4gICAgICAgICAgICAgICAgIyBpZiB0cnVlIHRoZW4gcmV0dXJuXG4gICAgICAgICAgICAjIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgICMgZiA9IGZ1bmN0aW9uICgpXG4gICAgICAgICAgICAjIHtcbiAgICAgICAgICAgICAgICAjIGlmICh0cnVlKVxuICAgICAgICAgICAgICAgICMge1xuICAgICAgICAgICAgICAgICAgICAjIHJldHVyblxuICAgICAgICAgICAgICAgICMgfVxuICAgICAgICAgICAgIyB9XG4gICAgICAgICAgICAjIFwiXCJcIlxuXG4gICAgIyAgMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAgICAgICAwMDAgICAgICAgMDAwMDAwMFxuICAgICMgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgMDAwICAgICAgMDAwXG4gICAgIyAwMDAgICAgICAgMDAwMDAwMDAwICAwMDAgICAgICAwMDAgICAgICAwMDAwMDAwXG4gICAgIyAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAgICAwMDAgICAgICAgICAgIDAwMFxuICAgICMgIDAwMDAwMDAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgMDAwMDAwMCAgMDAwMDAwMFxuXG4gICAgaXQgJ2NhbGxzJyAtPlxuXG4gICAgICAgIGNtcCAnYShiKScgICAgICAgICAgICAnYShiKSdcbiAgICAgICAgY21wICdhKGIsYyknICAgICAgICAgICdhKGIsYyknXG4gICAgICAgIGNtcCAnYSgxLG51bGwsXCIyXCIpJyAgICdhKDEsbnVsbCxcIjJcIiknXG4gICAgICAgIGNtcCAnYVsxXShiKScgICAgICAgICAnYVsxXShiKSdcbiAgICAgICAgY21wIFwiZiAnYicsIChhKSAtPlwiICAgXCJmKCdiJyxmdW5jdGlvbiAoYSlcXG57fSlcIlxuICAgICAgICBjbXAgXCJhKCcxJyAyIDMuNCB0cnVlIGZhbHNlIG51bGwgdW5kZWZpbmVkIE5hTiBJbmZpbml0eSlcIixcbiAgICAgICAgICAgIFwiYSgnMScsMiwzLjQsdHJ1ZSxmYWxzZSxudWxsLHVuZGVmaW5lZCxOYU4sSW5maW5pdHkpXCJcblxuICAgICAgICBjbXAgXCJcIlwiXG4gICAgICAgICAgICBhKFxuICAgICAgICAgICAgICAgICcxJ1xuICAgICAgICAgICAgICAgIDJcbiAgICAgICAgICAgICAgICAzLjRcbiAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsXG4gICAgICAgICAgICAgICAgICAgIHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEoJzEnLDIsMy40LHRydWUsW251bGwsdW5kZWZpbmVkXSlcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGEgJzEnXG4gICAgICAgICAgICBiICAyXG4gICAgICAgICAgICBjICAzLjRcbiAgICAgICAgICAgIGQgIHRydWVcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEoJzEnKVxuICAgICAgICAgICAgYigyKVxuICAgICAgICAgICAgYygzLjQpXG4gICAgICAgICAgICBkKHRydWUpXG4gICAgICAgICAgICBcIlwiXCJcblxuICAgICAgICBjbXAgXCJcIlwiXG4gICAgICAgICAgICBhIGIgMVxuICAgICAgICAgICAgYyBkIDJcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEoYigxKSlcbiAgICAgICAgICAgIGMoZCgyKSlcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGFcbiAgICAgICAgICAgICAgICBiXG4gICAgICAgICAgICAgICAgICAgIDNcbiAgICAgICAgICAgIGNcbiAgICAgICAgICAgICAgICBkXG4gICAgICAgICAgICAgICAgICAgIDRcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIGEoYigzKSlcbiAgICAgICAgICAgIGMoZCg0KSlcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGFcbiAgICAgICAgICAgICAgICBiXG4gICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgY1xuICAgICAgICAgICAgICAgIGRcbiAgICAgICAgICAgICAgICAyXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBhKGIsMSlcbiAgICAgICAgICAgIGMoZCwyKVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wIFwiYSAnYicgLT4gY1wiLFxuICAgICAgICAgICAgXCJcIlwiXG4gICAgICAgICAgICBhKCdiJyxmdW5jdGlvbiAoKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBjXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgXCJcIlwiXG5cbiAgICAgICAgY21wICdsID0gcGF0Lm1hcCAtPicgJ2wgPSBwYXQubWFwKGZ1bmN0aW9uICgpXFxue30pJ1xuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgICgoYSkgLT4gMSlcbiAgICAgICAgICAgIFwiXCJcIiBcIlwiXCJcbiAgICAgICAgICAgIChmdW5jdGlvbiAoYSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGwgPSBhIChpKSAtPiAwXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBsID0gYShmdW5jdGlvbiAoaSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGwgPSB0aW1lciAoKGkpIC0+IDEpXG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBsID0gdGltZXIoKGZ1bmN0aW9uIChpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiAxXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICAgIFwiXCJcIlxuXG4gICAgICAgIGNtcCBcIlwiXCJcbiAgICAgICAgICAgIGwgPSB0aW1lciAoKGkpIC0+IGkpLCB5XG4gICAgICAgICAgICBcIlwiXCIgXCJcIlwiXG4gICAgICAgICAgICBsID0gdGltZXIoKGZ1bmN0aW9uIChpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBpXG4gICAgICAgICAgICB9KSx5KVxuICAgICAgICAgICAgXCJcIlwiXG4iXX0=
//# sourceURL=../coffee/test_func.coffee