###
 0000000   00     00   0000000   00000000   000   000  
000   000  000   000  000   000  000   000  000  000   
000 00 00  000000000  000000000  0000000    0000000    
000 0000   000 0 000  000   000  000   000  000  000   
 00000 00  000   000  000   000  000   000  000   000  
###

{ cmp, evl } = require './utils'

describe 'qmark' ->

    # 000   000  000   000  000      000       0000000  00     00  00000000   
    # 0000  000  000   000  000      000      000       000   000  000   000  
    # 000 0 000  000   000  000      000      000       000000000  00000000   
    # 000  0000  000   000  000      000      000       000 0 000  000        
    # 000   000   0000000   0000000  0000000   0000000  000   000  000        

    it 'nullcmp' ->
            
        cmp "a?"                    ";(a != null)"
        cmp "a.b.c?"                ";(a.b.c != null)"
        cmp "a.b().c?"              ";(a.b().c != null)"
        cmp "if a.b().c?"           "if ((a.b().c != null))\n{\n}"
        
        cmp "-> m?",
            """
            (function ()
            {
                return (m != null)
            })
            """
        cmp "r.filter (m) -> m?",
            """
            r.filter(function (m)
            {
                return (m != null)
            })
            """
            
        cmp "matches = matches.filter (m) -> m[1]?",
            """
            matches = matches.filter(function (m)
            {
                return (m[1] != null)
            })
            """
            
    #  0000000    0000000   0000000  00000000  00000000   000000000  
    # 000   000  000       000       000       000   000     000     
    # 000000000  0000000   0000000   0000000   0000000       000     
    # 000   000       000       000  000       000   000     000     
    # 000   000  0000000   0000000   00000000  000   000     000     
    
    it 'assert' ->
        
        cmp "e?.d"                  ";(e != null ? e.d : undefined)"
        cmp "e?()"                  ';(typeof e === "function" ? e() : undefined)'
        cmp "e?[1]"                 ";(e != null ? e[1] : undefined)"
        cmp "e?[1].f"               ";(e != null ? e[1].f : undefined)"
        cmp "e?[1]?.g"              ";((_1_1_=e) != null ? (_1_5_=_1_1_[1]) != null ? _1_5_.g : undefined : undefined)"
        cmp "e?.f?.d"               ";((_1_1_=e) != null ? (_1_4_=_1_1_.f) != null ? _1_4_.d : undefined : undefined)"
        
        
        evl "e=1;e?[1]?.g"          undefined
        
    #  0000000   0000000   00     00  0000000    000  000   000  00000000  0000000    
    # 000       000   000  000   000  000   000  000  0000  000  000       000   000  
    # 000       000   000  000000000  0000000    000  000 0 000  0000000   000   000  
    # 000       000   000  000 0 000  000   000  000  000  0000  000       000   000  
    #  0000000   0000000   000   000  0000000    000  000   000  00000000  0000000    
    
    it 'combined' ->
        
        cmp "e?.col?"               ";((e != null ? e.col : undefined) != null)"
        
        cmp """
            (a.b?.c.d?.e == 2)
            """ """
            ;(((_1_4_=a.b) != null ? (_1_9_=_1_4_.c.d) != null ? _1_9_.e : undefined : undefined) === 2)
            """ 

        cmp """
            x = a[1]?.b()?.c?().d?.e
            """ """
            x = ((_1_8_=a[1]) != null ? (_1_13_=_1_8_.b()) != null ? typeof (_1_16_=_1_13_.c) === "function" ? (_1_21_=_1_16_().d) != null ? _1_21_.e : undefined : undefined : undefined : undefined)
            """ 
        
                    